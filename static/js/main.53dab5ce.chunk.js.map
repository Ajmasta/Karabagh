{"version":3,"sources":["images/RegionalMap.png","images/monastery.jpg","images/armeniaHeart.png","logo.svg","images/map1.png","images/town.jpg","components/navBar.js","components/googleAnalytics.js","components/infoPanel.js","components/coverPanel.js","components/languagePicker.js","components/help.js","components/newsTile.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","useState","activeTab","setActiveTab","AppBar","position","Toolbar","className","Grid","id","container","alignContent","to","onClick","window","scroll","GApageView","page","ReactGA","pageview","InfoPanel","image","imageAlt","text","title","useEffect","console","log","direction","xs","sm","justifyContent","map","sentence","src","alt","CoverPanel","button","history","useHistory","item","sentences","Button","color","path","link","push","LanguagePicker","textContent","setTextContent","languageChoice","setLanguageChoice","texts","english","width","height","french","russian","Help","document","getElementById","scrollIntoView","behavior","block","inline","href","NewsTile","description","url","md","alignItems","justifyItems","App","initialize","process","basename","wrap","monastery","infos","Panel1","RegionalMap","Panel2","Panel3","homepage","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.53dab5ce.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/RegionalMap.6401acae.png\";","module.exports = __webpack_public_path__ + \"static/media/monastery.8226e90d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/armeniaHeart.b31a9946.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/map1.12a99a32.png\";","module.exports = __webpack_public_path__ + \"static/media/town.fd5495a4.jpg\";","import React, { useState } from \"react\";\r\nimport logo from \"../images/armeniaHeart.png\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport { Link } from \"react-router-dom\";\r\nconst NavBar = () => {\r\n  // const screenTooSmall = false; //useMediaQuery(\"(max-width:600px)\");\r\n  const [activeTab, setActiveTab] = useState(\"home\");\r\n\r\n  return (\r\n    <AppBar position=\"sticky\">\r\n      <Toolbar className=\"navBar\">\r\n        <Grid id=\"navBarLinks\" container alignContent=\"center\">\r\n          <Link\r\n            to=\"/\"\r\n            id={activeTab === \"home\" ? \"activeTab\" : \"\"}\r\n            onClick={() => {setActiveTab(\"home\");\r\n            window.scroll(0,0)}}\r\n          >\r\n            Conflict{\" \"}\r\n          </Link>\r\n          <Link\r\n            to=\"/infos\"\r\n            id={activeTab === \"infos\" ? \"activeTab\" : \"\"}\r\n            onClick={() => {setActiveTab(\"infos\");\r\n            window.scroll(0,0)}}\r\n          >\r\n            {\" \"}\r\n            Infos{\" \"}\r\n          </Link>{\" \"}\r\n          <Link\r\n            to=\"/news\"\r\n            id={activeTab === \"news\" ? \"activeTab\" : \"\"}\r\n            onClick={() => {setActiveTab(\"news\");\r\n            window.scroll(0,0)}}\r\n          >\r\n            {\" \"}\r\n            News\r\n          </Link>\r\n          <Link\r\n            to=\"/help\"\r\n            id={activeTab === \"help\" ? \"activeTab\" : \"\"}\r\n            onClick={() => {setActiveTab(\"help\");\r\n            window.scroll(0,0)}}\r\n          >\r\n            {\" \"}\r\n            Help\r\n          </Link>{\" \"}\r\n        </Grid>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","\r\nimport ReactGA from \"react-ga\"\r\n\r\n\r\nexport const initGA = () => {       \r\n    ReactGA.initialize(process.env.REACT_APP_GOOGLE_ID);\r\n  }  \r\n\r\n  export const GApageView = (page) => {   \r\n    ReactGA.pageview(page);   \r\n}\r\n\r\n\r\nexport const GAButtonClick = () => {   \r\n  \r\n}","import React, { useEffect, useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { GApageView } from \"./googleAnalytics\";\r\nconst InfoPanel = ({ image, imageAlt, text, title, id }) => {\r\n  useEffect(() => { GApageView(\"info\"); }, []);\r\n  console.log(text)\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"row\"\r\n      className=\"infoPanel\"\r\n      alignContent=\"center\"\r\n      id={id}\r\n    >\r\n      <Grid xs={11} sm={4} className=\"infoPanelText\" justifyContent=\"center\">\r\n      <h2>{title} </h2>\r\n        <div> {text.map(sentence => <p> {sentence} </p>)}</div>\r\n      </Grid>\r\n      <Grid xs={11} sm={6} className=\"infoPanelImage\">\r\n        <img src={image} alt={imageAlt}></img>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default InfoPanel;\r\n","import React, { useEffect, useState } from \"react\";import Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { GApageView } from \"./googleAnalytics\";\r\nimport { useHistory } from \"react-router-dom\";\r\nconst CoverPanel = ({ id, text, button }) => {\r\n  useEffect(() => { GApageView(\"landing\"); }, []);\r\n  const history = useHistory()\r\n  const redirect=(path)=>{history.push(path)}\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"row\"\r\n      className=\"coverPanel\"\r\n      alignContent=\"center\"\r\n      id={`coverPanel${id}`}\r\n  \r\n    >\r\n    <Grid item xs={9}>\r\n      <p className=\"coverPanelText\" id={`coverPanelText${id}`}>\r\n        {text.map(sentences=> <p>{sentences} </p>)}\r\n      </p>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n      <Button\r\n        color=\"inherit\"\r\n        onClick={()=>redirect(button.link)}\r\n      >\r\n        {\" \"}\r\n        {button.text}{\" \"}\r\n      </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default CoverPanel;\r\n","import React, { useState } from \"react\";\r\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport texts from \"../text.json\";\r\nconst LanguagePicker = ({ textContent, setTextContent }) => {\r\n  const [languageChoice, setLanguageChoice] = useState(true);\r\n  return (\r\n    <>\r\n      {languageChoice ? (\r\n        <div id=\"languageSelection\">\r\n          <ArrowForwardIosIcon onClick={() => setLanguageChoice(false)} />\r\n          {textContent === texts.english ? (\r\n            <>\r\n              <img\r\n                src=\"https://upload.wikimedia.org/wikipedia/en/thumb/c/c3/Flag_of_France.svg/800px-Flag_of_France.svg.png\"\r\n                width=\"40px\"\r\n                height=\"auto\"\r\n                onClick={() => setTextContent(texts.french)}\r\n              ></img>\r\n              <img\r\n                src=\"https://upload.wikimedia.org/wikipedia/en/thumb/f/f3/Flag_of_Russia.svg/1920px-Flag_of_Russia.svg.png\"\r\n                width=\"40px\"\r\n                height=\"auto\"\r\n                onClick={() => setTextContent(texts.russian)}\r\n              ></img>{\" \"}\r\n            </>\r\n          ) : textContent === texts.french ? (\r\n            <>\r\n              <img\r\n                src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/f/f2/Flag_of_Great_Britain_%281707%E2%80%931800%29.svg/1920px-Flag_of_Great_Britain_%281707%E2%80%931800%29.svg.png\"\r\n                width=\"40px\"\r\n                height=\"auto\"\r\n                onClick={() => setTextContent(texts.english)}\r\n              ></img>\r\n              <img\r\n                src=\"https://upload.wikimedia.org/wikipedia/en/thumb/f/f3/Flag_of_Russia.svg/1920px-Flag_of_Russia.svg.png\"\r\n                width=\"40px\"\r\n                height=\"auto\"\r\n                onClick={() => setTextContent(texts.russian)}\r\n              ></img>{\" \"}\r\n            </>\r\n          ) : (\r\n            <>\r\n              <img\r\n                src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/f/f2/Flag_of_Great_Britain_%281707%E2%80%931800%29.svg/1920px-Flag_of_Great_Britain_%281707%E2%80%931800%29.svg.png\"\r\n                width=\"40px\"\r\n                height=\"auto\"\r\n                onClick={() => setTextContent(texts.english)}\r\n              ></img>\r\n              <img\r\n                src=\"https://upload.wikimedia.org/wikipedia/en/thumb/c/c3/Flag_of_France.svg/800px-Flag_of_France.svg.png\"\r\n                width=\"40px\"\r\n                height=\"auto\"\r\n                onClick={() => setTextContent(texts.french)}\r\n              ></img>\r\n            </>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <ArrowBackIosIcon\r\n          id=\"languageArrow\"\r\n          onClick={() => setLanguageChoice(true)}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default LanguagePicker;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { GApageView } from \"./googleAnalytics\";\r\nimport Button from \"@material-ui/core/Button\"\r\nconst Help = () => {\r\n  useEffect(() => { GApageView(\"help\"); }, []);\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"row\"\r\n      alignContent=\"center\"\r\n      justifyContent=\"center\"\r\n      id=\"helpPage\"\r\n    >\r\n      <Grid xs={12} className=\"historySelector\">\r\n        <p\r\n          onClick={() => {\r\n            const element = document.getElementById(\"donate\");\r\n            element.scrollIntoView({\r\n              behavior: \"smooth\",\r\n              block: \"end\",\r\n              inline: \"nearest\",\r\n            });\r\n          }}\r\n        >\r\n          Donate\r\n        </p>\r\n        <p\r\n          onClick={() => {\r\n            const element = document.getElementById(\"sign\");\r\n            element.scrollIntoView({\r\n              behavior: \"smooth\",\r\n              block: \"end\",\r\n              inline: \"nearest\",\r\n            });\r\n          }}\r\n        >\r\n          Sign\r\n        </p>\r\n        <p\r\n          onClick={() => {\r\n            const element = document.getElementById(\"contact\");\r\n            element.scrollIntoView({\r\n              behavior: \"smooth\",\r\n              block: \"end\",\r\n              inline: \"nearest\",\r\n            });\r\n          }}\r\n        >\r\n          Contact Politicians\r\n        </p>\r\n      </Grid>\r\n      <Grid item container id=\"helpMainBody\" justifyContent=\"center\">\r\n\r\n      <h3> Donate to the Armenian Fund</h3>\r\n      \r\n      <div id=\"donateButton\"><a href=\"https://www.himnadram.org/en\"><Button>Donate</Button></a>\r\n        <p>\r\n        The Armenian Fund aims to provide help with health services, infrastuctures, rural development and housing to Armenians and the people of Karabagh. Making a donation helps the people of Karabagh to rebuild their country and survive. \r\n        </p>\r\n        \r\n      </div>\r\n      <Grid xs={12} id=\"sign\">\r\n        <h2> Sign Petitions</h2>\r\n      </Grid>\r\n\r\n      <div><p>Canada: <a  className=\"helpLinks\"  href=\"https://petitions.ourcommons.ca/en/Petition/Sign/e-2885\">House of Commons Petition</a></p></div>\r\n      <Grid xs={12} id=\"contact\">\r\n        <h2> Contact Politicians Directly</h2>\r\n          <p>USA: <a className=\"helpLinks\" href=\"https://www.usa.gov/elected-officials\"> Contact Elected Officials</a></p>\r\n          <p> Canada: <a className=\"helpLinks\"  href=\"https://represent.opennorth.ca/\"> Find your Representative</a></p>\r\n      </Grid>\r\n   \r\n    </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Help;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport CoverPanel from \"./coverPanel\";\r\nimport { GApageView } from \"./googleAnalytics\";\r\n\r\nconst NewsTile = ({ image, title, description, url }) => {\r\n  useEffect(() => { GApageView(\"news\"); }, []);\r\n\r\n  return (\r\n    <Grid\r\n      xs={11}\r\n      sm={9}\r\n      md={8}\r\n      direction=\"row\"\r\n      item\r\n      container\r\n      className=\"newsTile\"\r\n    >\r\n      <Grid xs={12} sm={3} container alignItems=\"center\" justifyItems=\"center\">\r\n        <a href={url}>\r\n          <img className=\"newsImage\" src={image} />\r\n        </a>\r\n      </Grid>\r\n\r\n      <Grid xs={12} sm={9} container item className=\"newsText\">\r\n        <a href={url}>\r\n          <Grid>\r\n            <a className=\"newsTitle\" href={url}>\r\n              {title}\r\n            </a>\r\n          </Grid>\r\n          <Grid sm={12}>\r\n            <p className=\"newsDescription\">{description}</p>{\" \"}\r\n          </Grid>\r\n        </a>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default NewsTile;\r\n","import React, { useEffect, useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  useParams,\n  useHistory,\n} from \"react-router-dom\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\n\nimport NavBar from \"./components/navBar.js\";\nimport InfoPanel from \"./components/infoPanel.js\";\nimport CoverPanel from \"./components/coverPanel.js\";\nimport LanguagePicker from \"./components/languagePicker.js\";\nimport texts from \"./text.json\";\nimport logo from \"./logo.svg\";\nimport map1 from \"./images/map1.png\";\nimport monastery from \"./images/monastery.jpg\";\nimport RegionalMap from \"./images/RegionalMap.png\";\nimport \"./App.css\";\nimport town from \"./images/town.jpg\"\n\nimport Help from \"./components/help\";\nimport NewsTile from \"./components/newsTile\";\n\nimport {initGA} from \"./components/googleAnalytics\"\n\nfunction App() {\n  const history = useHistory()\n  const redirect=(path)=>{history.push(path)}\n  const text = `Lorem Ipsum-ը տպագրության և տպագրական արդյունաբերության համար նախատեսված մոդելային տեքստ է: Սկսած 1500-ակ Lorem Ipsum-ը տպագրության և տպագրական արդյունաբերության հա Lorem Ipsum-ը տպագրության և տպագրական արդյունաբերության հա Lorem Ipsum-ը տպագրության և տպագրական արդյունաբերության հա Lorem Ipsum-ը տպագրության և տպագրական արդյունաբերության հա Lorem Ipsum-ը տպագրության և տպագրական արդյունաբերության հա`;\n  const [textContent, setTextContent] = useState(texts.english);\n  const [languageChoice, setLanguageChoice] = useState(true);\n  useEffect(()=> initGA(),[])\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <LanguagePicker\n        textContent={textContent}\n        setTextContent={setTextContent}\n      />\n      <Grid className=\"App\" container direction=\"column\" wrap=\"nowrap\">\n        <NavBar />\n\n        <Switch>\n          <Route path=\"/news\">\n            <Grid container direction=\"column\" className=\"newsTiles\">\n              <NewsTile\n                title={\"France, U.S. and Russia to meet on Nagorno-Karabakh\"}\n                description={\n                  \"France, the United States and Russia will step up efforts to end fighting between Azeri and ethnic Armenian forces in the South Caucasus by holding talks in Geneva on Thursday, as fears of a regional war grow.\"\n                }\n                url={\n                  \"https://www.reuters.com/article/us-armenia-azerbaijan/france-us-and-russia-to-meet-on-nagorno-karabakh-amid-fears-of-regional-war-idUSKBN26S1F2\"\n                }\n                image={\n                  \"https://static.reuters.com/resources/r/?m=02&d=20201007&t=2&i=1536576497&r=LYNXMPEG9622M\"\n                }\n              />\n              <NewsTile\n                title={\"France, U.S. and Russia to meet on Nagorno-Karabakh\"}\n                description={\n                  \"France, the United States and Russia will step up efforts to end fighting between Azeri and ethnic Armenian forces in the South Caucasus by holding talks in Geneva on Thursday, as fears of a regional war grow.\"\n                }\n                url={\n                  \"https://www.reuters.com/article/us-armenia-azerbaijan/france-us-and-russia-to-meet-on-nagorno-karabakh-amid-fears-of-regional-war-idUSKBN26S1F2\"\n                }\n                image={\n                  \"https://static.reuters.com/resources/r/?m=02&d=20201007&t=2&i=1536576497&r=LYNXMPEG9622M\"\n                }\n              />\n            </Grid>\n          </Route>\n          <Route path=\"/infos\">\n            <>\n              <Grid className=\"historySelector\">\n                <p\n                  onClick={() => {\n                    const element = document.getElementById(\"history\");\n                    element.scrollIntoView({\n                      behavior: \"smooth\",\n                      block: \"end\",\n                      inline: \"nearest\",\n                    });\n                  }}\n                >\n                  History\n                </p>\n                <p\n                  onClick={() => {\n                    const element = document.getElementById(\"faq\");\n                    element.scrollIntoView();\n                  }}\n                >\n                  FAQ\n                </p>\n              </Grid>\n              <Grid xs=\"12\" className=\"infoPanelTitle\">\n                {\" \"}\n                <h2>History</h2>{\" \"}\n              </Grid>\n\n              {/*panel 1*/}\n\n              <InfoPanel\n                image={monastery}\n                imageAlt={\"logo\"}\n                text={textContent.infos.history.Panel1.text}\n                title={textContent.infos.history.Panel1.title}\n                id=\"history\"\n          \n              />\n\n              <InfoPanel image={RegionalMap} imageAlt={\"logo\"} text={textContent.infos.history.Panel2.text}  title={textContent.infos.history.Panel2.title} />\n              <InfoPanel image={RegionalMap} imageAlt={\"logo\"} text={textContent.infos.history.Panel3.text}  title={textContent.infos.history.Panel3.title} />\n             \n             {/*<Grid xs=\"12\" className=\"infoPanelTitle\">\n                {\" \"}\n                <h2>FAQ</h2>{\" \"}\n              </Grid>\n              <InfoPanel image={map1} imageAlt={\"logo\"} text={[\"test\",\"test\"]} id=\"faq\" />*/}\n            </>\n          </Route>\n          <Route path=\"/help\">\n            <Help />\n          </Route>\n          <Route path=\"/\">\n            <>\n              <CoverPanel\n                id=\"1\"\n                text={textContent.homepage.Panel1}\n                button={{ text: \"Help\", link: \"/help\" }}\n              />\n                <CoverPanel\n                id=\"3\"\n                text={\n                  textContent.homepage.Panel3\n                }\n                button={{ text: \"Read The Latest News\", link: \"/news\" }}\n              />\n              <CoverPanel\n                id=\"2\"\n                text={\n                  textContent.homepage.Panel2\n                }\n                button={{ text: \"Learn More\", link: \"/infos\" }}\n              />\n\n            \n            </>\n          </Route>\n        </Switch>\n      </Grid>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}