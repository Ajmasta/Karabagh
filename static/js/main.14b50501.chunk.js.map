{"version":3,"sources":["images/monastery.jpg","images/RegionalMap.png","images/armeniaHeart.png","logo.svg","images/map1.png","images/town.jpg","components/navBar.js","components/googleAnalytics.js","components/infoPanel.js","components/coverPanel.js","components/faqPanel.js","components/languagePicker.js","components/help.js","components/newsTile.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","textContent","useState","activeTab","setActiveTab","AppBar","position","Toolbar","className","Grid","id","container","alignContent","to","onClick","window","scroll","navBar","style","color","GApageView","page","ReactGA","pageview","GAButtonClick","category","action","label","event","InfoPanel","image","imageAlt","text","title","useEffect","direction","item","xs","sm","map","sentence","i","key","src","alt","CoverPanel","button","history","useHistory","sentences","Button","path","link","push","FaqPanel","LanguagePicker","setTextContent","languageChoice","setLanguageChoice","texts","english","width","height","french","russian","Help","letterVisible","setLetterVisible","justifyContent","document","getElementById","scrollIntoView","behavior","block","inline","help","titles","href","buttons","explanation","subtitles","border","letter","NewsTile","description","url","md","alignItems","justifyItems","App","expanded","setExpanded","handleTabChange","panel","newExpanded","language","navigator","console","log","includes","setLanguage","initialize","process","basename","wrap","newsPage","news","newsGenerator","infos","Accordion","onChange","AccordionSummary","expandIcon","Panel1","AccordionDetails","monastery","Panel2","RegionalMap","Panel3","faq","Panel4","homepage","Boolean","location","hostname","match","ReactDOM","render","StrictMode","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.14b50501.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/monastery.8226e90d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/RegionalMap.6401acae.png\";","module.exports = __webpack_public_path__ + \"static/media/armeniaHeart.b31a9946.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/map1.12a99a32.png\";","module.exports = __webpack_public_path__ + \"static/media/town.fd5495a4.jpg\";","import React, { useState } from \"react\";\r\nimport logo from \"../images/armeniaHeart.png\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NavBar = ({textContent}) => {\r\n  // const screenTooSmall = false; //useMediaQuery(\"(max-width:600px)\");\r\n  const [activeTab, setActiveTab] = useState(\"home\");\r\n\r\n  return (\r\n    <AppBar position=\"sticky\">\r\n      <Toolbar className=\"navBar\">\r\n        <Grid id=\"navBarLinks\" container alignContent=\"center\">\r\n          <Link\r\n            to=\"/\"\r\n            id={activeTab === \"home\" ? \"activeTab\" : \"\"}\r\n            onClick={() => {setActiveTab(\"home\");\r\n            window.scroll(0,0)}}\r\n          >\r\n            {textContent.navBar[0]}\r\n          </Link>\r\n          <Link\r\n            to=\"/infos\"\r\n            id={activeTab === \"infos\" ? \"activeTab\" : \"\"}\r\n            onClick={() => {setActiveTab(\"infos\");\r\n            window.scroll(0,0)}}\r\n          >\r\n          \r\n            {textContent.navBar[1]}\r\n          </Link>{\" \"}\r\n          <Link\r\n            to=\"/news\"\r\n            id={activeTab === \"news\" ? \"activeTab\" : \"\"}\r\n            onClick={() => {setActiveTab(\"news\");\r\n            window.scroll(0,0)}}\r\n          >\r\n            {\" \"}\r\n            {textContent.navBar[2]}\r\n          </Link>\r\n          <Link\r\n            to=\"/help\"\r\n            id={activeTab === \"help\" ? \"activeTab\" : \"\"}\r\n            onClick={() => {setActiveTab(\"help\");\r\n            window.scroll(0,0)}}\r\n          >\r\n            <span style={{color:\"white\"}} >  {textContent.navBar[3]}</span>\r\n          \r\n          </Link>{\" \"}\r\n        </Grid>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","\r\nimport ReactGA from \"react-ga\"\r\n\r\n\r\nexport const initGA = () => {       \r\n    ReactGA.initialize(process.env.REACT_APP_GOOGLE_ID);\r\n  }  \r\n\r\n  export const GApageView = (page) => {   \r\n    ReactGA.pageview(page);   \r\n}\r\n\r\n\r\nexport const GAButtonClick = (category,action,label) => {   \r\n  ReactGA.event({\r\n    category,action,label\r\n  })\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { GApageView } from \"./googleAnalytics\";\r\nconst InfoPanel = ({ image, imageAlt, text, title, id }) => {\r\n  useEffect(() => { GApageView(\"info\"); }, []);\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"row\"\r\n      className=\"infoPanel\"\r\n      alignContent=\"center\"\r\n      id={id}\r\n    >\r\n      <Grid item xs={11} sm={4} className=\"infoPanelText\" >\r\n      <h2>{title} </h2>\r\n        <div> {text.map((sentence,i)=> <p key={i}> {sentence} </p>)}</div>\r\n      </Grid>\r\n      <Grid  xs={11} sm={6} className=\"infoPanelImage\">\r\n        <img src={image} alt={imageAlt}></img>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default InfoPanel;\r\n","import React, { useEffect, useState } from \"react\";import Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { GApageView } from \"./googleAnalytics\";\r\nimport { useHistory } from \"react-router-dom\";\r\nconst CoverPanel = ({ id, text, button }) => {\r\n  useEffect(() => { GApageView(\"landing\"); }, []);\r\n  const history = useHistory()\r\n  const redirect=(path)=>{history.push(path)}\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"row\"\r\n      className=\"coverPanel\"\r\n      alignContent=\"center\"\r\n      id={`coverPanel${id}`}\r\n  \r\n    >\r\n    <Grid item xs={9}>\r\n      <span className=\"coverPanelText\" id={`coverPanelText${id}`}>\r\n        {text.map(sentences=> <p>{sentences} </p>)}\r\n      </span>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n      <Button\r\n        color=\"inherit\"\r\n        onClick={()=>redirect(button.link)}\r\n        className=\"coverButton\"\r\n      >\r\n        {\" \"}\r\n        {button.text}{\" \"}\r\n      </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default CoverPanel;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { GApageView } from \"./googleAnalytics\";\r\nconst FaqPanel = ({ text, title }) => {\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"row\"\r\n      className=\"infoPanel\"\r\n      alignContent=\"center\"\r\n    >\r\n      <Grid xs={12} className=\"infoPanelText\" >\r\n      <h2>{title}</h2>\r\n        <div>{text.map((sentence,i) => <p key={i}> {sentence} </p>)}</div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default FaqPanel;\r\n","import React, { useState } from \"react\";\r\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport texts from \"../text.json\";\r\nconst LanguagePicker = ({ textContent, setTextContent }) => {\r\n  const [languageChoice, setLanguageChoice] = useState(true);\r\n  return (\r\n    <>\r\n      {languageChoice ? (\r\n        <div id=\"languageSelection\">\r\n          <ArrowForwardIosIcon onClick={() => setLanguageChoice(false)} />\r\n          {textContent === texts.english ? (\r\n            <>\r\n              <img\r\n                src=\"https://upload.wikimedia.org/wikipedia/en/thumb/c/c3/Flag_of_France.svg/800px-Flag_of_France.svg.png\"\r\n                width=\"40px\"\r\n                height=\"auto\"\r\n                onClick={() => setTextContent(texts.french)}\r\n              ></img>\r\n              <img\r\n                src=\"https://upload.wikimedia.org/wikipedia/en/thumb/f/f3/Flag_of_Russia.svg/1920px-Flag_of_Russia.svg.png\"\r\n                width=\"40px\"\r\n                height=\"auto\"\r\n                onClick={() => setTextContent(texts.russian)}\r\n              ></img>{\" \"}\r\n            </>\r\n          ) : textContent === texts.french ? (\r\n            <>\r\n              <img\r\n                src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/f/f2/Flag_of_Great_Britain_%281707%E2%80%931800%29.svg/1920px-Flag_of_Great_Britain_%281707%E2%80%931800%29.svg.png\"\r\n                width=\"40px\"\r\n                height=\"auto\"\r\n                onClick={() => setTextContent(texts.english)}\r\n              ></img>\r\n              <img\r\n                src=\"https://upload.wikimedia.org/wikipedia/en/thumb/f/f3/Flag_of_Russia.svg/1920px-Flag_of_Russia.svg.png\"\r\n                width=\"40px\"\r\n                height=\"auto\"\r\n                onClick={() => setTextContent(texts.russian)}\r\n              ></img>{\" \"}\r\n            </>\r\n          ) : (\r\n            <>\r\n              <img\r\n                src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/f/f2/Flag_of_Great_Britain_%281707%E2%80%931800%29.svg/1920px-Flag_of_Great_Britain_%281707%E2%80%931800%29.svg.png\"\r\n                width=\"40px\"\r\n                height=\"auto\"\r\n                onClick={() => setTextContent(texts.english)}\r\n              ></img>\r\n              <img\r\n                src=\"https://upload.wikimedia.org/wikipedia/en/thumb/c/c3/Flag_of_France.svg/800px-Flag_of_France.svg.png\"\r\n                width=\"40px\"\r\n                height=\"auto\"\r\n                onClick={() => setTextContent(texts.french)}\r\n              ></img>\r\n            </>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <ArrowBackIosIcon\r\n          id=\"languageArrow\"\r\n          onClick={() => setLanguageChoice(true)}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default LanguagePicker;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { GApageView, GAButtonClick } from \"./googleAnalytics\";\r\nimport Button from \"@material-ui/core/Button\"\r\nconst Help = ({textContent}) => {\r\n  useEffect(() => { GApageView(\"help\"); }, []);\r\n  const [letterVisible,setLetterVisible] = useState(false)\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"row\"\r\n      alignContent=\"center\"\r\n      justifyContent=\"center\"\r\n      id=\"helpPage\"\r\n    >\r\n      <Grid xs={12} className=\"historySelector\">\r\n        <p\r\n          onClick={() => {\r\n            const element = document.getElementById(\"donate\");\r\n            element.scrollIntoView({\r\n              behavior: \"smooth\",\r\n              block: \"end\",\r\n              inline: \"nearest\",\r\n            });\r\n          }}\r\n        >\r\n          {textContent.help.titles[0]}\r\n        </p>\r\n        <p\r\n          onClick={() => {\r\n            const element = document.getElementById(\"sign\");\r\n            element.scrollIntoView();\r\n          }}\r\n        >\r\n           {textContent.help.titles[1]}\r\n        </p>\r\n        <p\r\n          onClick={() => {\r\n            const element = document.getElementById(\"contact\");\r\n            element.scrollIntoView();\r\n          }}\r\n        >\r\n          {textContent.help.titles[2]}\r\n        </p>\r\n      </Grid>\r\n      <Grid item container id=\"helpMainBody\" justifyContent=\"center\">\r\n\r\n      <Grid xs={12}> <h2>  {textContent.help.titles[0]}</h2></Grid>\r\n      <h3>The Armenian Fund</h3>\r\n      \r\n      <div id=\"donateButton\">\r\n      <a onClick={()=> GAButtonClick(\"Button\",\"click\",\"Armenian Fund\")} href=\"https://armeniafund.ejoinme.org/donate\">\r\n        <Button className=\"coverButton\">{textContent.help.buttons[0]}</Button></a>\r\n        <p>\r\n        {textContent.help.explanation[0]}\r\n        </p>\r\n        <h3>Hayastan All Armenian Fund</h3>\r\n        </div>\r\n        <div id=\"donateButton\">\r\n        <a  onClick={()=> GAButtonClick(\"Button\",\"click\",\"Hayastan All Armenian Fund\")} href=\"https://www.himnadram.org/en\">\r\n        <Button className=\"coverButton\">{textContent.help.buttons[0]}</Button></a>\r\n        <p>\r\n        {textContent.help.explanation[1]} \r\n         </p>\r\n        </div>\r\n     \r\n      \r\n\r\n\r\n      <Grid xs={12} id=\"sign\">\r\n        <h2>  {textContent.help.titles[1]}</h2>\r\n      </Grid>\r\n\r\n      <div><p>Canada: <a  className=\"helpLinks\"  href=\"https://petitions.ourcommons.ca/en/Petition/Sign/e-2885\">\r\n      House of Commons Petition</a></p></div>\r\n      \r\n      <Grid xs={12} id=\"contact\">\r\n      <h2> {textContent.help.titles[2]}</h2>\r\n      \r\n        <h3> {textContent.help.subtitles[0]}</h3>\r\n        <p> {textContent.help.explanation[2]}</p>\r\n          <p>USA: <a className=\"helpLinks\" href=\"https://www.usa.gov/elected-officials\"> Contact Elected Officials</a></p>\r\n          <p> Canada: <a className=\"helpLinks\"  href=\"https://represent.opennorth.ca/\"> Find your Representative</a></p>\r\n          <p> Europe: <a className=\"helpLinks\"  href=\"https://www.consilium.europa.eu/en/contact/general-enquiries/send-message/?IsPresident=true&__cf_chl_jschl_tk__=5243439a02c1d4054d9a6a16f9da7de5252b61c3-1602566947-0-AdSepdZw7bsaaPyUN4N5SnzVS4xs0-UsK_lLKivAOfi1REtWGrOBI5BdvU5GKesLxxIJcQWNQCFz1wPkGfrDFKLMvZPTuOqjPtPpfPPAJFXpE5uAXNnX3svzZS5xMbw-AyrgUOxMG6tLBwWt7BkwzbLvbzDOeVDYX9vdJHBYfUl1iBiFtb4QO8DrU82CFt6kL_us5SslcqXUk82VyyX7EYqMjp11Yfz4oJdc-duKfup0Ki9LS2Elc6faP_tLWjdH263TBLt3HXU6rhzmhJq9dAiuVZLrPAaqkR44wtR_994FXUX1mPblVKf_NHzHaqqpTL2JQjY-g6LejkXPyRio0kS5aKnt8S1D4bmPwwuwlgK6\"> European Council</a></p>\r\n          <Button className=\"coverButton\" onClick={()=>setLetterVisible(!letterVisible)}> {textContent.help.buttons[1]} </Button>  {letterVisible? <div style={{border:\"1px solid black\"}} >{textContent.help.letter.map(sentence=> <p> {sentence}</p>)} </div>:\"\"}\r\n\r\n          <h3>{textContent.help.titles[2]}</h3>\r\n          <p> {textContent.help.explanation[3]}</p>\r\n      </Grid>\r\n   \r\n    </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Help;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport CoverPanel from \"./coverPanel\";\r\nimport { GApageView } from \"./googleAnalytics\";\r\n\r\nconst NewsTile = ({ image, title, description, url }) => {\r\n  useEffect(() => { GApageView(\"news\"); }, []);\r\n\r\n  return (\r\n    <Grid\r\n      xs={11}\r\n      sm={9}\r\n      md={8}\r\n      direction=\"row\"\r\n      item\r\n      container\r\n      className=\"newsTile\"\r\n    >\r\n      <Grid xs={12} sm={3} container alignItems=\"center\" justifyItems=\"center\">\r\n        <a href={url}>\r\n          <img className=\"newsImage\" src={image} />\r\n        </a>\r\n      </Grid>\r\n\r\n      <Grid xs={12} sm={9} container item className=\"newsText\">\r\n        <a href={url}>\r\n          <Grid>\r\n            <a className=\"newsTitle\" href={url}>\r\n              {title}\r\n            </a>\r\n          </Grid>\r\n          <Grid sm={12}>\r\n            <p className=\"newsDescription\">{description}</p>{\" \"}\r\n          </Grid>\r\n        </a>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default NewsTile;\r\n","import React, { useEffect, useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  useParams,\n  useHistory,\n} from \"react-router-dom\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport NavBar from \"./components/navBar.js\";\nimport InfoPanel from \"./components/infoPanel.js\";\nimport CoverPanel from \"./components/coverPanel.js\";\nimport FaqPanel from \"./components/faqPanel\"\nimport LanguagePicker from \"./components/languagePicker.js\";\nimport texts from \"./text.json\";\nimport logo from \"./logo.svg\";\nimport map1 from \"./images/map1.png\";\nimport monastery from \"./images/monastery.jpg\";\nimport RegionalMap from \"./images/RegionalMap.png\";\nimport \"./App.css\";\nimport town from \"./images/town.jpg\"\n\nimport Help from \"./components/help\";\nimport NewsTile from \"./components/newsTile\";\n\nimport {initGA} from \"./components/googleAnalytics\"\n\nfunction App() {\n  const history = useHistory()\n  const redirect=(path)=>{history.push(path)}\n  const text = `Lorem Ipsum-ը տպագրության և տպագրական արդյունաբերության համար նախատեսված մոդելային տեքստ է: Սկսած 1500-ակ Lorem Ipsum-ը տպագրության և տպագրական արդյունաբերության հա Lorem Ipsum-ը տպագրության և տպագրական արդյունաբերության հա Lorem Ipsum-ը տպագրության և տպագրական արդյունաբերության հա Lorem Ipsum-ը տպագրության և տպագրական արդյունաբերության հա Lorem Ipsum-ը տպագրության և տպագրական արդյունաբերության հա`;\n  const [textContent, setTextContent] = useState(texts.english);\n  const [languageChoice, setLanguageChoice] = useState(true);\n  const [expanded,setExpanded] = useState(false)\n  const handleTabChange = (panel) => (event, newExpanded)=> { setExpanded(newExpanded? panel:false)}\n  const setLanguage = () => \n{\n  const language = navigator.language\n  console.log(language)\n  if (language.includes(\"en\")) return setTextContent(texts.english)\n  if (language.includes(\"fr\")) return setTextContent(texts.french)\n  if (language.includes(\"ru\")) return setTextContent(texts.russian)\n  return \"\"\n}\n  useEffect(()=> {\n    setLanguage()\n    initGA()},[])\n  const newsGenerator = () => {\n   \n    let newsPage = []\n    for(let i=1;i<=16;i++){\n     \n      newsPage.push(<NewsTile key={i} image={textContent.news[i].image} description={textContent.news[i].description} title={textContent.news[i].title} url={textContent.news[i].url} />)\n    }\n    return newsPage\n  }\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <LanguagePicker\n        textContent={textContent}\n        setTextContent={setTextContent}\n      />\n      <Grid className=\"App\" container direction=\"column\" wrap=\"nowrap\">\n        <NavBar textContent={textContent} />\n\n        <Switch>\n          <Route path=\"/news\">\n            <Grid container direction=\"column\" className=\"newsTiles\">\n            { newsGenerator()}\n            </Grid>\n          </Route>\n          <Route path=\"/infos\">\n            <Grid container  className=\"infosPage\" >\n        \n              <Grid item xs={12} className=\"infoPanelTitle\">\n                {\" \"}\n                <h2>{textContent.infos.history.title}</h2>{\" \"}\n              </Grid>\n\n              {/*panel 1*/}\n            \n              <Accordion expanded={expanded ===\"panel1\"} onChange={handleTabChange(\"panel1\")} className=\"accordionTab\" >\n              <AccordionSummary className=\"accordionSummary\" expandIcon={<ExpandMoreIcon className=\"expandIcon\" />}>{textContent.infos.history.Panel1.title} </AccordionSummary>\n                <AccordionDetails className=\"accordionDetails\">\n                  <InfoPanel\n                    image={monastery}\n                    imageAlt={\"logo\"}\n                    text={textContent.infos.history.Panel1.text}\n                    id=\"history\"\n              \n                  />\n                </AccordionDetails>\n              </Accordion>\n         \n         \n              <Accordion expanded={expanded ===\"panel2\"} onChange={handleTabChange(\"panel2\")} className=\"accordionTab\" >\n                <AccordionSummary className=\"accordionSummary\"  expandIcon={<ExpandMoreIcon className=\"expandIcon\" />}>{textContent.infos.history.Panel2.title}</AccordionSummary>\n                <AccordionDetails className=\"accordionDetails\">\n                    <InfoPanel image={RegionalMap} imageAlt={\"logo\"} text={textContent.infos.history.Panel2.text}/>\n                </AccordionDetails>\n              </Accordion>\n           \n           \n              <Accordion expanded={expanded ===\"panel3\"} onChange={handleTabChange(\"panel3\")} className=\"accordionTab\"  >\n              <AccordionSummary className=\"accordionSummary\" expandIcon={<ExpandMoreIcon className=\"expandIcon\"/>}>{textContent.infos.history.Panel3.title}</AccordionSummary>\n                <AccordionDetails className=\"accordionDetails\" >\n                  <InfoPanel image={RegionalMap} imageAlt={\"logo\"} text={textContent.infos.history.Panel3.text}/>\n                </AccordionDetails>\n               </Accordion>\n \n \n            \n             <Grid xs={12} className=\"infoPanelTitle\">\n                {\" \"}\n                <h2>{textContent.infos.faq.title}</h2>{\" \"}\n              </Grid>\n              <Accordion expanded={expanded ===\"panel4\"} onChange={handleTabChange(\"panel4\")} className=\"accordionTab\" >\n              <AccordionSummary className=\"accordionSummary\" expandIcon={<ExpandMoreIcon className=\"expandIcon\" />}>{textContent.infos.faq.Panel1.title} </AccordionSummary>\n                <AccordionDetails className=\"accordionDetails\">\n                  <FaqPanel\n                    image={monastery}\n                    imageAlt={\"logo\"}\n                    text={textContent.infos.faq.Panel1.text}\n                    id=\"history\"\n              \n                  />\n                </AccordionDetails>\n              </Accordion>\n         \n         \n              <Accordion expanded={expanded ===\"panel5\"} onChange={handleTabChange(\"panel5\")} className=\"accordionTab\" >\n                <AccordionSummary className=\"accordionSummary\"  expandIcon={<ExpandMoreIcon className=\"expandIcon\" />}>{textContent.infos.faq.Panel2.title}</AccordionSummary>\n                <AccordionDetails className=\"accordionDetails\">\n                    <FaqPanel  text={textContent.infos.faq.Panel2.text}/>\n                </AccordionDetails>\n              </Accordion>\n           \n           \n              <Accordion expanded={expanded ===\"panel6\"} onChange={handleTabChange(\"panel6\")} className=\"accordionTab\"  >\n              <AccordionSummary className=\"accordionSummary\" expandIcon={<ExpandMoreIcon className=\"expandIcon\"/>}>{textContent.infos.faq.Panel3.title}</AccordionSummary>\n                <AccordionDetails className=\"accordionDetails\" >\n                  <FaqPanel text={textContent.infos.faq.Panel3.text}/>\n                </AccordionDetails>\n               </Accordion>\n\n               <Accordion expanded={expanded ===\"panel7\"} onChange={handleTabChange(\"panel7\")} className=\"accordionTab\"  >\n              <AccordionSummary className=\"accordionSummary\" expandIcon={<ExpandMoreIcon className=\"expandIcon\"/>}>{textContent.infos.faq.Panel4.title}</AccordionSummary>\n                <AccordionDetails className=\"accordionDetails\" >\n                  <FaqPanel  text={textContent.infos.faq.Panel4.text}/>\n                </AccordionDetails>\n               </Accordion>\n\n            </Grid>\n          </Route>\n          <Route path=\"/help\">\n            <Help textContent={textContent} />\n          </Route>\n          <Route path=\"/\">\n            <>\n              <CoverPanel\n                id=\"1\"\n                text={textContent.homepage.Panel1}\n                button={{ text: textContent.homepage.buttons[0], link: \"/help\" }}\n              />\n                <CoverPanel\n                id=\"3\"\n                text={\n                  textContent.homepage.Panel3\n                }\n                button={{ text:  textContent.homepage.buttons[1], link: \"/news\" }}\n              />\n              <CoverPanel\n                id=\"2\"\n                text={\n                  textContent.homepage.Panel2\n                }\n                button={{ text:  textContent.homepage.buttons[2], link: \"/infos\" }}\n              />\n\n            \n            </>\n          </Route>\n        </Switch>\n      </Grid>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}